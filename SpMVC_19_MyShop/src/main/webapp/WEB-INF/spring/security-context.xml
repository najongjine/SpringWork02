<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.2.xsd">

<!-- security 설정 -->
<!-- admin 사용자를 임시로 등록하여 login을 테스트 -->
<security:authentication-manager>
	<security:authentication-provider>
		<security:user-service>
			<security:user name="admin11" password="{noop}password" authorities="ROLE_ADMIN"/>
			<security:user name="user11" password="{noop}password" authorities="ROLE_USER"/>
		</security:user-service>
	</security:authentication-provider>
</security:authentication-manager>

<!-- DB에서 사용자 정보 불러오기 -->
<security:authentication-manager>
	<security:authentication-provider>
		<security:jdbc-user-service data-source-ref="emsHiber"
		users-by-username-query="select username,password,enabled from users where username=?"
		authorities-by-username-query="select username,authority from authorities where username=?"
		/>
	</security:authentication-provider>
</security:authentication-manager>

<!-- intercept-url
spring security를 통해서 접근할 url(path)를 설정

use-expressions
hasRole('역활') 과 같은 표현식을 사용할수 있도록 선언
 -->
<security:http auto-config="true" use-expressions="true">
	<security:csrf disabled="false"/>
	<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
	<security:intercept-url pattern="/auth/**" access="permitAll()"/>
	<security:intercept-url pattern="/**" access="permitAll"/>
	
	<!-- 정상적으로 로그인이 되면 /로 redirect
	로그인이 실패하면 /login path error 변수 하나 부착하여 다시 login으로 보내라
	login-page="/auth/login"  == custom login jsp
	login-processing-url="/login" == post method after login. It's fixed addr
	authentication-failure-url="/auth/login?error" == 저 cont 경로에 error 라는 parameter를 같이 붙여서 보내라
	-->
	<security:form-login 
	login-page="/auth/login" 
	login-processing-url="/login"
	 default-target-url="/"
	authentication-failure-url="/auth/login?error" 
	username-parameter="username" password-parameter="password"/>
	
	<!-- logout을 시도해서 정상적으로 logout이 되면 / path 로 redirect-->
	<security:logout logout-url="/logout" logout-success-url="/"/>
</security:http>
</beans>
